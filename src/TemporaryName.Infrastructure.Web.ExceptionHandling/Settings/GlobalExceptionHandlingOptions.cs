using System;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace TemporaryName.Infrastructure.Web.ExceptionHandling.Settings;

public class GlobalExceptionHandlingOptions
{
    /// <summary>
    /// Gets or sets a value indicating whether to include detailed error information,
    /// such as stack traces, in the ProblemDetails response.
    /// This should typically only be enabled in development environments.
    /// Defaults to false.
    /// </summary>
    public bool IncludeStackTrace { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to include the exception's InnerException details
    /// in the ProblemDetails response when IncludeStackTrace is true.
    /// Defaults to false.
    /// </summary>
    public bool IncludeInnerException { get; set; } = false;

    /// <summary>
    /// Gets or sets the base URI for problem types.
    /// Example: "https://your-api-docs.com/errors/".
    /// If set, it will be prepended to the problem type generated by mappers.
    /// </summary>
    public string? ProblemTypeUriBase { get; set; }

    /// <summary>
    /// Customizes the response for a specific exception type.
    /// Key: Exception type name (e.g., "SqlException").
    /// Value: Function to create a ProblemDetails instance.
    /// This offers a quick way to add simple custom mappings without creating full mapper classes.
    /// More complex mappings should use IExceptionProblemDetailsMapper.
    /// </summary>
    public Dictionary<string, Func<HttpContext, Exception, GlobalExceptionHandlingOptions, ProblemDetails>>
        CustomProblemDetailsMappings { get; } = new();

    /// <summary>
    /// A function to retrieve a correlation ID from the HttpContext.
    /// If not set, HttpContext.TraceIdentifier will be used.
    /// </summary>
    public Func<HttpContext, string>? GetCorrelationId { get; set; }
}
