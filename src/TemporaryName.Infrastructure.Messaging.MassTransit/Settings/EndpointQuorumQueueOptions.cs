using System;

namespace TemporaryName.Infrastructure.Messaging.MassTransit.Settings;

public class EndpointQuorumQueueOptions
{
        public const string SectionName = "RabbitMqEndpointQuorumQueues";

        /// <summary>
        /// If true, all configured receive endpoints will attempt to be declared as Quorum Queues
        /// unless overridden by specific endpoint configurations or naming conventions.
        /// </summary>
        public bool DeclareAllAsQuorum { get; set; } = false; // Default to false, opt-in per endpoint or pattern

        /// <summary>
        /// A list of specific endpoint names (queue names) that should be declared as Quorum Queues.
        /// This allows for targeted application of Quorum Queues.
        /// The names should match the kebab-case formatted queue names generated by MassTransit.
        /// Example: ["order-processing-service", "critical-event-handler"]
        /// </summary>
        public List<string> SpecificQuorumEndpoints { get; set; } = new List<string>();

        /// <summary>
        /// Optional: A suffix that, if an endpoint name ends with it, will cause the endpoint
        /// to be configured as a Quorum Queue.
        /// Example: "-quorum"
        /// </summary>
        public string QuorumEndpointSuffix { get; set; } = string.Empty;


        // Quorum queues have specific arguments. While MassTransit's .SetQuorumQueue() handles defaults,
        // you might want to expose some if needed, e.g., delivery-limit for poison message handling.
        // However, for v8, .SetQuorumQueue() is the primary method.

        /// <summary>
        /// For Quorum Queues, you can set a delivery limit. After a message has been redelivered
        /// this many times (due to consumer NACKs without requeue, or requeues up to this limit),
        /// it will be dead-lettered (if a DLX is configured on the queue) or dropped.
        /// Set to 0 or null to disable this specific limit (rely on retry policies).
        /// RabbitMQ default for x-delivery-limit is no limit.
        /// </summary>
        public uint? DeliveryLimit { get; set; } // Example: 10
}
